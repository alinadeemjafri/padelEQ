rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserDoc(userId) {
      return request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isCoach() {
      return hasRole('coach');
    }
    
    function isPlayer() {
      return hasRole('player');
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if request.auth != null && 
                   request.auth.uid == userId && 
                   request.resource.data.keys().hasAll(['email', 'role', 'firstName', 'lastName']) &&
                   (request.resource.data.role == 'player' || request.resource.data.role == 'coach');
      allow update: if isUserDoc(userId);
    }

    // Matches collection
    match /matches/{matchId} {
      allow read: if isAuthenticated() &&
        (resource.data.playerId == request.auth.uid || 
         resource.data.coachId == request.auth.uid ||
         isCoach());
      allow create: if isAuthenticated() && isPlayer();
      allow update: if isAuthenticated() && 
        (resource.data.playerId == request.auth.uid || 
         resource.data.coachId == request.auth.uid);
    }

    // Analysis collection
    match /analysis/{analysisId} {
      allow read: if isAuthenticated() &&
        (get(/databases/$(database)/documents/matches/$(resource.data.matchId)).data.playerId == request.auth.uid ||
         resource.data.coachId == request.auth.uid);
      allow create: if isAuthenticated() && isCoach();
      allow update: if isAuthenticated() && resource.data.coachId == request.auth.uid;
    }

    // Coach Profiles collection
    match /coachProfiles/{profileId} {
      allow read: if isAuthenticated();
      allow create, update: if isAuthenticated() && isCoach() && isUserDoc(profileId);
    }

    // Reviews collection
    match /reviews/{reviewId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isPlayer() &&
        exists(/databases/$(database)/documents/matches/$(request.resource.data.matchId)) &&
        get(/databases/$(database)/documents/matches/$(request.resource.data.matchId)).data.playerId == request.auth.uid;
      allow update, delete: if false;
    }

    // Player Stats collection
    match /playerStats/{playerId} {
      allow read: if isAuthenticated() && 
        (isUserDoc(playerId) || isCoach());
      allow write: if isAuthenticated() && isUserDoc(playerId);
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
} 